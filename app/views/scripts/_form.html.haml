= form_for @script, html: {multipart: true} do |f|
  - if @script.errors.any?
    #error_explanation
      %h2= "#{pluralize(@script.errors.count, "error")} prohibited this script from being saved:"
      %ul
        - @script.errors.full_messages.each do |msg|
          %li= msg

  .field
    = f.label :name
    = f.text_field :name, class: 'input-xlarge'
  .field
    = f.label :body
    = f.text_area :body, class: 'input-xxlarge script-area', rows: 15
  .field
    = label_tag t(:field_attachments)
    %ul.attachments
      - @script.attachments.order(:upload_file_name).each do |attachment|
        %li
          %i.icon-file
          = attachment.upload.instance.upload_file_name
          %span.muted
            (
            = number_to_human_size(attachment.upload.instance.upload_file_size)
            )
          %label.checkbox
            = check_box_tag "delete_attachments[]", attachment.id
            = t(:button_remove)

    .fileuploads
      = render 'form_upload', :display => 'none'
      = render 'form_upload', :display => 'block'
    .fileuploads-more
      = link_to '#', :class => 'attachment-more btn' do
        %i.icon-plus
        =t(:button_more_attachment)

  .field
    .hooks
      = label_tag t(:field_hooks)
      - @script.hooks.each do |hook|
        .hook
          .input-append
            = text_field_tag 'hooks[][url]', hook.url, class: 'input-xlarge'
            %span.add-on
              = check_box_tag "hooks[][delete]", hook.id
              = t(:button_remove)

      .hook
        .input-append
          = text_field_tag 'hooks[][url]', '', class: 'input-xlarge'
          %span.add-on
            = check_box_tag "hooks[][delete]", class: 'checkbox'
            = t(:button_remove)

    .hooks-more
      = link_to '#', :class => 'hook-more btn' do
        %i.icon-plus
        =t(:button_more_hook)

  .actions
    = f.submit t(:button_save), class: 'btn btn-primary'

:javascript
  $(function() {
    $('.attachment-more').on('click', function(e) {
      var fileupload = $('.fileuploads .fileupload:first-child');
      var lastupload = $('.fileuploads .fileupload:last-child');
      fileupload.clone(true).toggle().insertAfter(lastupload);
      return false;
    });
    $('.hook-more').on('click', function(e) {
      var hook = $('.hooks .hook:last-child');
      var cloned = hook.clone(true)
      cloned.insertAfter(hook);
      cloned.find('input').val('');
      return false;
    });
    $('.script-area').each(function() {
      CodeMirror.fromTextArea(this, {mode: "shell", lineNumbers: true});
    });
  });
