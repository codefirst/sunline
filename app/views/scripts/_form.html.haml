= form_for @script, html: {multipart: true} do |f|
  .mb-3
    = f.label :name
    = f.text_field :name, class: 'form-control'
  .mb-3
    = f.label :body
    = f.text_area :body, class: 'form-control script-area', rows: 15
  .mb-3
    = label_tag t(:field_attachments)
    %ul.attachments.list-unstyled
      - @script.attachments.order(:upload_file_name).each do |attachment|
        %li
          %i.fa.fa-file
          = attachment.upload.filename
          %span.text-muted
            (
            = number_to_human_size(attachment.upload.byte_size)
            \/
            = time_ago_in_words(attachment.updated_at) + t(:ago)
            )
          .form-check.form-check-inline
            = check_box_tag "delete_attachments[]", attachment.id, false, class: 'form-check-input'
            = label_tag nil, t(:button_remove), class: 'form-check-label'
    .fileinputs
      = render 'form_upload', display: 'none'
      = render 'form_upload', display: 'block'
    .fileinputs-more.mt-2
      = link_to '#', class: 'attachment-more btn btn-outline-secondary' do
        %i.fa.fa-plus
        =t(:button_more_attachment)
  .actions
    = f.submit t(:button_save), class: 'btn btn-primary', data: { loading_text: 'Loading...' }
:javascript
  document.addEventListener('DOMContentLoaded', function() {
    const attachmentMoreButton = document.querySelector('.attachment-more');
    attachmentMoreButton.addEventListener('click', function(e) {
      e.preventDefault();
      const fileinputs = document.querySelector('.fileinputs');
      const fileinput = fileinputs.querySelector('.fileinput:first-child');
      const lastupload = fileinputs.querySelector('.fileinput:last-child');
      const clone = fileinput.cloneNode(true);
      clone.style.display = '';
      lastupload.after(clone);
      return false;
    });
    document.querySelectorAll('.script-area').forEach(function(el) {
      editorFromTextArea(el, {});
    });
  });
